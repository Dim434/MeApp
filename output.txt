MeApp.swift 
 ['//\n', '//  MeAppApp.swift\n', '//  MeApp\n', '//\n', '//  Created by Dmitry on 12/8/22.\n', '//\n', '\n', 'import SwiftUI\n', '\n', '@main\n', 'struct MeApp: App {\n', '    @StateObject var model = MeModel().load()\n', '    \n', '    var body: some Scene {\n', '        WindowGroup {\n', '            RouterView(router: model.router) { path in\n', '                switch path {\n', '                case .login: ContentView().environmentObject(self.model)\n', '                case .chat: ChatView().environmentObject(self.model)\n', '                case .settings(let type): SettingsView(type: type).environmentObject(self.model)\n', '                case .xmlImporter: XMLImporterView().environmentObject(self.model)\n', '                case .uiSettings: UISettingsView(model: self.model).environmentObject(self.model)\n', '                case .imagePreview(let image): ImagePreviewView(image: image).environmentObject(self.model)\n', '                case .xmlExporter: XMLExporterView().environmentObject(self.model)\n', '                }\n', '            }\n', '        }\n', '    }\n', '}\n']
MeApp.entitlements 
 ['<?xml version="1.0" encoding="UTF-8"?>\n', '<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">\n', '<plist version="1.0">\n', '<dict>\n', '\t<key>com.apple.security.app-sandbox</key>\n', '\t<true/>\n', '\t<key>com.apple.security.device.audio-input</key>\n', '\t<true/>\n', '\t<key>com.apple.security.files.downloads.read-write</key>\n', '\t<true/>\n', '\t<key>com.apple.security.files.user-selected.read-write</key>\n', '\t<true/>\n', '\t<key>com.apple.security.network.client</key>\n', '\t<true/>\n', '\t<key>keychain-access-groups</key>\n', '\t<array>\n', '\t\t<string>$(AppIdentifierPrefix)pro.ddif</string>\n', '\t</array>\n', '</dict>\n', '</plist>\n']
